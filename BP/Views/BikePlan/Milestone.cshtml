@model BP.ViewModels.BikePlan.BikePlanViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_BPLayout.cshtml";
}
 @Content.Script("jquery-1.6.2.js", Url)
 @Content.Script("tinymce.3.4.5/jquery.tinymce.js", Url)
    <script type="text/javascript">
    $(document).ready(function () {
        $('textarea').tinymce({

                // Location of TinyMCE script
                script_url: '@Request.ApplicationPath/Scripts/tinymce.3.4.5/tiny_mce.js',
                theme: "advanced",

                height: "500",
                width: "790",
                verify_html: false,
                plugins: "pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,autosave",

                // Theme options
                theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
                theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
                theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
                theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak,restoredraft,codehighlighting,netadvimage",
                theme_advanced_toolbar_location: "top",
                theme_advanced_toolbar_align: "left",
                theme_advanced_statusbar_location: "bottom",
                theme_advanced_resizing: false,

                // Example content CSS (should be your site CSS)
                content_css: "@Request.ApplicationPath/Scripts/tinymce.3.4.5/css/content.css",
                convert_urls: false,

                // Drop lists for link/image/media/template dialogs
                template_external_list_url: "lists/template_list.js",
                external_link_list_url: "lists/link_list.js",
                external_image_list_url: "lists/image_list.js",
                media_external_list_url: "lists/media_list.js"

            });
    })
</script>
<div class="leftcolumn">
    <ul>
        @for (var i = 0; i < Model.Milestones.Count(); i++)
        {
            var milestone = Model.Milestones.ElementAt(i);
            <li>@Html.ActionLink(milestone.Title, "Milestone", new { milestoneOrder = (i + 1) })
                @if (milestone == Model.SelectedMilestone)
                {
                    <ul>
                        @for (var j = 0; j < Model.Steps.Count(); j++)
                        {
                            var step = Model.Steps.ElementAt(j);
                            <li>
                                @(step.StepId == Model.SelectedStep.StepId
           ? Html.ActionLink(step.Name, "Milestone", new { milestoneOrder = i + 1, stepOrder = j + 1 }, new { @class = "active" })
           : Html.ActionLink(step.Name, "Milestone", new { milestoneOrder = i + 1, stepOrder = j + 1 }))
                            </li>
                        }
                    </ul>
                }
            </li>
        }
    </ul>
</div>

<div class="rightcolumn">
   
</div>

<div class="centercolumn">
    @using (Html.BeginForm())
    {
        @Html.Raw(Model.SelectedStep.Guidance)
        for (var i = 0; i < Model.Tasks.Count(); i++)
        {
            <p>@Model.Tasks.ElementAt(i).Name</p>
           
            //@Html.EditorFor(m => m.Outcomes.ElementAt(i).Description)
            @(Model.Outcomes.Any() ? Html.TextArea("Outcomes[" + @i + "].Description", Model.Outcomes.ElementAt(i).Description) : Html.TextArea("Outcomes[" + @i + "].Description"))
            @Html.Hidden("Outcomes[" + @i + "].TaskOutcomeId", Model.Outcomes.ElementAt(i).TaskOutcomeId)
            @Html.Hidden("Outcomes[" + @i + "].TaskId", Model.Outcomes.ElementAt(i).TaskId)
        }
          <p style="text-align: right">
            @Html.ActionLink("Cancel", "Milestone", new {milestoneOrder = @Model.MilestoneOrder, stepOrder = @Model.StepOrder })
            @Html.ActionLink("Preview in PDF", "PDFView", new {milestoneOrder = @Model.MilestoneOrder, stepOrder = @Model.StepOrder })
              
              <input type="submit" name="Save" value="Save" />
        </p>
    }

</div>
